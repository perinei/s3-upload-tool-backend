AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: >
  S3 Upload Tool

###### METADATA ###################

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Frontend"
        Parameters:
          - pProjectName
          - pRepoUrl
          - pBranch
          - pOauthToken
      - Label:
          default: "Bucket Configuration"
        Parameters:
          - pBucketPrefix

    ParameterLabels:
      pProjectName:
        default: "Name of your project"
      pBranch:
        default: "Repository Branch"
      pOauthToken:
        default: "Access Token"
      pRepoUrl:
        default: "repository URL"
      pBucketPrefix:
        default: "Bucket folder where files will be uploaded"

######################################################################

Parameters:
  pBranch:
    Type: String
    Description: Branch Name
    Default: ""

  pProjectName:
    Type: String
    Description: Project Name
    Default: ""

  pOauthToken:
    Type: String
    Description: Repository Access Token
    Default: ""

  pRepoUrl:
    Type: String
    Description: Repository URL
    Default: ""

  pBucketPrefix:
    Type: String
    Description: Bucket Prefix
    Default: ""

    ############ CONDITION ##############

Conditions:
  HasBranch: !Not
    - !Equals
      - !Ref pBranch
      - ""

  HasProjectName: !Not
    - !Equals
      - !Ref pProjectName
      - ""

  HasToken: !Not
    - !Equals
      - !Ref pOauthToken
      - ""

  HasRepoUrl: !Not
    - !Equals
      - !Ref pRepoUrl
      - ""

  HasBucketPrefix: !Not
    - !Equals
      - !Ref pBucketPrefix
      - ""

  CreateResources: !And
    - !Condition HasBranch
    - !Condition HasProjectName
    - !Condition HasToken
    - !Condition HasRepoUrl
    - !Condition HasBucketPrefix

############## RESOURCES #####################33

Resources:
  rAmplifyRoleS3UploadTool:
    Type: AWS::IAM::Role
    Condition: CreateResources
    Properties:
      RoleName: !Sub "${pProjectName}-${pBranch}-amplify"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - amplify.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub "${pProjectName}-${pBranch}-amplify"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "amplify:*"
                Resource: "*"
      Tags:
        - Key: ProjectName
          Value: !Ref pProjectName
        - Key: Branch
          Value: !Ref pBranch

  rAmplifyAppS3UploadTool:
    Type: AWS::Amplify::App
    Condition: CreateResources
    Properties:
      Name: !Sub "${pProjectName}-${pBranch}-ui"
      Description: Angular App
      CustomRules:
        - Source: '</^[^.]+$|\.(?!(css|gif|ico|jpg|js|png|txt|svg|woff|ttf)$)([^.]+$)/>'
          Target: "/index.html"
          Status: "200"
      EnvironmentVariables:
        - Name: PROJECT_NAME
          Value: !Ref pProjectName
        - Name: ENVIRONMENT_NAME
          Value: !Ref pBranch
        - Name: cognito_region
          Value: !Ref AWS::Region
        - Name: user_pools_id
          Value: !Ref rUserPoolS3UploadTool
        - Name: user_pools_web_client_id
          Value: !Ref rAmplifyCognitoClientlS3UploadTool
        - Name: bucket
          Value: !Ref s3uploadbucket
        - Name: identityPoolId
          Value: !Ref S3UploadIdentityPool
        - Name: BucketPrefix
          Value: !Ref pBucketPrefix
        # - Name: APIURL
        #   Value: !Ref pAPIURL
      Repository: !Ref pRepoUrl
      OauthToken: !Ref pOauthToken
      Tags:
        - Key: ProjectName
          Value: !Ref pProjectName
        - Key: Environment
          Value: !Ref pBranch
      IAMServiceRole: !GetAtt rAmplifyRoleS3UploadTool.Arn

  rAmplifyBranchS3UploadTool:
    Type: AWS::Amplify::Branch
    Condition: CreateResources
    Properties:
      BranchName: !Ref pBranch
      AppId: !GetAtt rAmplifyAppS3UploadTool.AppId
      Description: Main Branch
      EnableAutoBuild: true
      Tags:
        - Key: ProjectName
          Value: !Ref pProjectName
        - Key: Branch
          Value: !Ref pBranch

  rUserPoolS3UploadTool:
    Type: AWS::Cognito::UserPool
    Condition: CreateResources
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      AutoVerifiedAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Mutable: true
          Name: nickname
          Required: true
        # - AttributeDataType: String
        # Mutable: true
        # Name: family_name
        # Required: true
        - AttributeDataType: String
          Mutable: false
          Name: email
          Required: true
      UsernameAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: false
      UserPoolName: !Sub "${pProjectName}-${pBranch}-S3UploadPool"

  rAmplifyCognitoClientlS3UploadTool:
    Type: AWS::Cognito::UserPoolClient
    Condition: CreateResources
    Properties:
      AccessTokenValidity: 1
      AllowedOAuthFlows:
        - implicit
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - email
        - openid
        - aws.cognito.signin.user.admin
      CallbackURLs:
        - "http://localhost:4200/login"
        # - !Sub 'https://${rAmplifyBranchS3UploadTool.BranchName}.${rAmplifyAppS3UploadTool.DefaultDomain}/login'
      ClientName: !Sub "${pProjectName}-${pBranch}-S3UploadClient"
      EnableTokenRevocation: true
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_CUSTOM_AUTH
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      IdTokenValidity: 1
      LogoutURLs:
        - "http://localhost:4200/login"
        # - !Sub 'https://${rAmplifyBranchS3UploadTool.BranchName}.${rAmplifyAppS3UploadTool.DefaultDomain}/login'
      PreventUserExistenceErrors: ENABLED
      ReadAttributes:
        - nickname
        - email
        - email_verified
      RefreshTokenValidity: 1
      SupportedIdentityProviders:
        - COGNITO
      TokenValidityUnits:
        AccessToken: hours
        IdToken: hours
        RefreshToken: days
      UserPoolId: !Ref rUserPoolS3UploadTool

  S3UploadIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Condition: CreateResources
    Properties:
      AllowClassicFlow: false
      AllowUnauthenticatedIdentities: false
      # CognitoEvents: Json
      CognitoIdentityProviders:
        - ClientId: !Ref rAmplifyCognitoClientlS3UploadTool
          ProviderName: !GetAtt rUserPoolS3UploadTool.ProviderName
          ServerSideTokenCheck: false
      # CognitoStreams:
      #   CognitoStreams
      # DeveloperProviderName: String
      IdentityPoolName: !Sub "${pProjectName}-${pBranch}-S3UploadIdentityPool"
      # OpenIdConnectProviderARNs:
      #   - String
      # PushSync:
      #   PushSync
      # SamlProviderARNs:
      #   - String
      # SupportedLoginProviders: Json

  AuthUserRoleS3UploadTool:
    Type: AWS::IAM::Role
    Condition: CreateResources
    Properties:
      RoleName: !Sub "${pProjectName}-${pBranch}-AuthUserRoleS3UploadTool"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
            Action:
              - sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud: !Ref S3UploadIdentityPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: authenticated
      Policies:
        - PolicyName: !Sub "${pProjectName}-${pBranch}-S3UploadToolAuth"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - mobileanalytics:PutEvents
                  - cognito-sync:*
                  - "cognito-identity:*"
                Resource: "*"

              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:aws:s3:::${s3uploadbucket}"
                Condition:
                  StringLike:
                    s3:prefix:
                      # - !Sub ${pBucketPrefix}/${!cognito-identity.amazonaws.com:sub}
                      - !Sub ${pBucketPrefix}/${!cognito-identity.amazonaws.com:sub}/*

              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  # - !Sub arn:aws:s3:::${pBucketName}/${pBucketPrefix}/${!cognito-identity.amazonaws.com:sub}
                  - !Sub "arn:aws:s3:::${s3uploadbucket}/${pBucketPrefix}/${!cognito-identity.amazonaws.com:sub}/*"

  UnAuthUserRoleS3UploadTool:
    Type: AWS::IAM::Role
    Condition: CreateResources
    Properties:
      RoleName: !Sub "${pProjectName}-${pBranch}-NothingAllowed"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
            Action:
              - sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud: !Ref S3UploadIdentityPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: unauthenticated
      Policies:
        - PolicyName: !Sub "${pProjectName}-${pBranch}-nothingAllowed"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Deny
                Action:
                  - "*"
                Resource:
                  - "*"

  IdentityPoolRoleAttachmentS3UploadTool:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Condition: CreateResources
    Properties:
      IdentityPoolId: !Ref S3UploadIdentityPool
      Roles:
        "authenticated": !GetAtt AuthUserRoleS3UploadTool.Arn
        "unauthenticated": !GetAtt UnAuthUserRoleS3UploadTool.Arn
        # "unauthenticated": !GetAtt UnAuthenticatedRole.Arn
      # RoleMappings:
      # "userpool1":
      # IdentityProvider:
      # AmbiguousRoleResolution: Deny
      # Type: Token
      # RulesConfiguration:
      #   Rules:
      #     - Claim: "sub"
      #       MatchType: "Equals"
      #       RoleARN: !GetAtt rAmplifyRoleS3UploadTool.Arn
      #       Value: "goodvalue"

  s3uploadbucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      CorsConfiguration:
        CorsRules:
          - AllowedMethods:
              - GET
              - PUT
            AllowedOrigins:
              - "*"
            AllowedHeaders:
              - "*"

  CopyFile:
    Type: AWS::Serverless::Function
    Condition: CreateResources
    # DependsOn: s3uploadbucket
    Properties:
      CodeUri: copyFile/
      Handler: app.lambda_handler
      Runtime: python3.8

      Events:
        EcopyFiles:
          Type: S3
          Properties:
            Bucket:
              Ref: s3uploadbucket
            Events:
              - s3:ObjectCreated:*

      Policies:
        - Statement:
            - Sid: S3copyFiles
              Effect: Allow
              Action:
                - s3:*
              Resource:
                - !Sub "arn:aws:s3:::${s3uploadbucket}"
                - !Sub "arn:aws:s3:::${s3uploadbucket}/*"

                # - !Sub "arn:aws:s3:::*"
                # - !Sub "arn:aws:s3:::*/*"

Outputs:
  oDefaultDomain:
    Condition: CreateResources
    Value: !Sub "https://${pBranch}.${rAmplifyAppS3UploadTool.DefaultDomain}"
    Description: Amplify URL
    Export:
      Name: !Sub "${pProjectName}-${pBranch}-S3UploadToolDomain"

  oUserPoolARN:
    Condition: CreateResources
    Value: !GetAtt rUserPoolS3UploadTool.Arn
    Description: UserPool ARN
    Export:
      Name: !Sub "${pProjectName}-${pBranch}-UserPoolARN-S3UploadTool"

  orAmplifyCognitoClientlS3UploadTool:
    Condition: CreateResources
    Value: !Ref rAmplifyCognitoClientlS3UploadTool
    Description: rAmplifyCognitoClientlS3UploadTool
    Export:
      Name: !Sub "${pProjectName}-${pBranch}-userpoolswebclientid"

  orUserPoolS3UploadToolProviderName:
    Condition: CreateResources
    Value: !GetAtt rUserPoolS3UploadTool.ProviderName
    Description: CognitoIdentityProviderName
    Export:
      Name: !Sub "${pProjectName}-${pBranch}-rUserPoolS3UploadToolProviderName"

  opBucketName:
    Value: !Ref s3uploadbucket
    Description: File S3 Bucket
    Export:
      Name: !Sub "${pProjectName}-${pBranch}-S3UploadBucketName"

  oUserPoolId:
    Condition: CreateResources
    Value: !Ref rUserPoolS3UploadTool
    Description: Userpoolid
    Export:
      Name: !Sub "${pProjectName}-${pBranch}-UserPoolID"

  oS3UploadIdentityPoolId:
    Condition: CreateResources
    Value: !Ref S3UploadIdentityPool
    Description: Identity Pool Id
    Export:
      Name: !Sub "${pProjectName}-${pBranch}-S3UploadIdentityPool"

  oBucketPrefix:
    Condition: CreateResources
    Value: !Ref pBucketPrefix
    Description: Bucket Prefix
    Export:
      Name: !Sub "${pProjectName}-${pBranch}-S3UploadBucketNamePrefix"
